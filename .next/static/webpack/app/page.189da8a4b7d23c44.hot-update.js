"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/barcode.ts":
/*!************************!*\
  !*** ./lib/barcode.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calcEAN13CheckDigit: function() { return /* binding */ calcEAN13CheckDigit; },\n/* harmony export */   normalizeBarcode: function() { return /* binding */ normalizeBarcode; },\n/* harmony export */   validateEAN13: function() { return /* binding */ validateEAN13; }\n/* harmony export */ });\nfunction calcEAN13CheckDigit(d12) {\n    if (!/^\\d{12}$/.test(d12)) throw new Error(\"invalid length\");\n    let sumOdd = 0; // 1,3,5,7,9,11桁目(1-based)\n    let sumEven = 0; // 2,4,6,8,10,12桁目\n    for(let i = 0; i < 12; i++){\n        const n = d12.charCodeAt(i) - 48;\n        if ((i + 1) % 2 === 1) sumOdd += n;\n        else sumEven += n;\n    }\n    const total = sumOdd + sumEven * 3;\n    return (10 - total % 10) % 10;\n}\nfunction validateEAN13(code) {\n    if (!/^\\d{13}$/.test(code)) return false;\n    const check = calcEAN13CheckDigit(code.slice(0, 12));\n    return check === Number(code[12]);\n}\n// 入力文字列からバーコードを正規化（EAN-13に統一）。不正ならnull\nfunction normalizeBarcode(input) {\n    const raw = (input || \"\").trim().normalize(\"NFKC\"); // 全角→半角などを正規化\n    const digits = raw.replace(/\\D+/g, \"\");\n    // EAN-13 / UPC-A を最優先\n    if (digits.length === 12) {\n        const ean = \"0\" + digits; // UPC-A -> EAN-13\n        // DB側は13桁で保持している前提。チェックが不一致でも情報検索のため通す\n        return validateEAN13(ean) ? ean : ean;\n    }\n    if (digits.length === 13) {\n        // チェックディジットが不一致でも、運用上コードがそのまま格納されているケースに対応\n        return digits;\n    }\n    // それ以外（Code39/Code128/ITF 等）: 英数/記号を許容してそのまま返す\n    // 実運用ではスキーマ・商品コード仕様に合わせて制約を調整してください\n    if (/^[A-Za-z0-9\\-_.]+$/.test(raw) && raw.length >= 4 && raw.length <= 64) {\n        return raw.toUpperCase();\n    }\n    return null;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9iYXJjb2RlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLFNBQVNBLG9CQUFvQkMsR0FBVztJQUM3QyxJQUFJLENBQUMsV0FBV0MsSUFBSSxDQUFDRCxNQUFNLE1BQU0sSUFBSUUsTUFBTTtJQUMzQyxJQUFJQyxTQUFTLEdBQUcsMEJBQTBCO0lBQzFDLElBQUlDLFVBQVUsR0FBRyxrQkFBa0I7SUFDbkMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUksSUFBSUEsSUFBSztRQUMzQixNQUFNQyxJQUFJTixJQUFJTyxVQUFVLENBQUNGLEtBQUs7UUFDOUIsSUFBSSxDQUFDQSxJQUFJLEtBQUssTUFBTSxHQUFHRixVQUFVRzthQUFRRixXQUFXRTtJQUN0RDtJQUNBLE1BQU1FLFFBQVFMLFNBQVNDLFVBQVU7SUFDakMsT0FBTyxDQUFDLEtBQU1JLFFBQVEsRUFBRSxJQUFLO0FBQy9CO0FBRU8sU0FBU0MsY0FBY0MsSUFBWTtJQUN4QyxJQUFJLENBQUMsV0FBV1QsSUFBSSxDQUFDUyxPQUFPLE9BQU87SUFDbkMsTUFBTUMsUUFBUVosb0JBQW9CVyxLQUFLRSxLQUFLLENBQUMsR0FBRztJQUNoRCxPQUFPRCxVQUFVRSxPQUFPSCxJQUFJLENBQUMsR0FBRztBQUNsQztBQUVBLHVDQUF1QztBQUNoQyxTQUFTSSxpQkFBaUJDLEtBQWE7SUFDNUMsTUFBTUMsTUFBTSxDQUFDRCxTQUFTLEVBQUMsRUFBR0UsSUFBSSxHQUFHQyxTQUFTLENBQUMsU0FBUyxjQUFjO0lBQ2xFLE1BQU1DLFNBQVNILElBQUlJLE9BQU8sQ0FBQyxRQUFRO0lBQ25DLHNCQUFzQjtJQUN0QixJQUFJRCxPQUFPRSxNQUFNLEtBQUssSUFBSTtRQUN4QixNQUFNQyxNQUFNLE1BQU1ILFFBQVEsa0JBQWtCO1FBQzVDLHVDQUF1QztRQUN2QyxPQUFPVixjQUFjYSxPQUFPQSxNQUFNQTtJQUNwQztJQUNBLElBQUlILE9BQU9FLE1BQU0sS0FBSyxJQUFJO1FBQ3hCLDJDQUEyQztRQUMzQyxPQUFPRjtJQUNUO0lBQ0EsK0NBQStDO0lBQy9DLG9DQUFvQztJQUNwQyxJQUFJLHFCQUFxQmxCLElBQUksQ0FBQ2UsUUFBUUEsSUFBSUssTUFBTSxJQUFJLEtBQUtMLElBQUlLLE1BQU0sSUFBSSxJQUFJO1FBQ3pFLE9BQU9MLElBQUlPLFdBQVc7SUFDeEI7SUFDQSxPQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2JhcmNvZGUudHM/ZWIzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY2FsY0VBTjEzQ2hlY2tEaWdpdChkMTI6IHN0cmluZyk6IG51bWJlciB7XG4gIGlmICghL15cXGR7MTJ9JC8udGVzdChkMTIpKSB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGxlbmd0aFwiKTtcbiAgbGV0IHN1bU9kZCA9IDA7IC8vIDEsMyw1LDcsOSwxMeahgeebrigxLWJhc2VkKVxuICBsZXQgc3VtRXZlbiA9IDA7IC8vIDIsNCw2LDgsMTAsMTLmoYHnm65cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMjsgaSsrKSB7XG4gICAgY29uc3QgbiA9IGQxMi5jaGFyQ29kZUF0KGkpIC0gNDg7XG4gICAgaWYgKChpICsgMSkgJSAyID09PSAxKSBzdW1PZGQgKz0gbjsgZWxzZSBzdW1FdmVuICs9IG47XG4gIH1cbiAgY29uc3QgdG90YWwgPSBzdW1PZGQgKyBzdW1FdmVuICogMztcbiAgcmV0dXJuICgxMCAtICh0b3RhbCAlIDEwKSkgJSAxMDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlRUFOMTMoY29kZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gIGlmICghL15cXGR7MTN9JC8udGVzdChjb2RlKSkgcmV0dXJuIGZhbHNlO1xuICBjb25zdCBjaGVjayA9IGNhbGNFQU4xM0NoZWNrRGlnaXQoY29kZS5zbGljZSgwLCAxMikpO1xuICByZXR1cm4gY2hlY2sgPT09IE51bWJlcihjb2RlWzEyXSk7XG59XG5cbi8vIOWFpeWKm+aWh+Wtl+WIl+OBi+OCieODkOODvOOCs+ODvOODieOCkuato+imj+WMlu+8iEVBTi0xM+OBq+e1seS4gO+8ieOAguS4jeato+OBquOCiW51bGxcbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVCYXJjb2RlKGlucHV0OiBzdHJpbmcpOiBzdHJpbmcgfCBudWxsIHtcbiAgY29uc3QgcmF3ID0gKGlucHV0IHx8IFwiXCIpLnRyaW0oKS5ub3JtYWxpemUoJ05GS0MnKTsgLy8g5YWo6KeS4oaS5Y2K6KeS44Gq44Gp44KS5q2j6KaP5YyWXG4gIGNvbnN0IGRpZ2l0cyA9IHJhdy5yZXBsYWNlKC9cXEQrL2csIFwiXCIpO1xuICAvLyBFQU4tMTMgLyBVUEMtQSDjgpLmnIDlhKrlhYhcbiAgaWYgKGRpZ2l0cy5sZW5ndGggPT09IDEyKSB7XG4gICAgY29uc3QgZWFuID0gXCIwXCIgKyBkaWdpdHM7IC8vIFVQQy1BIC0+IEVBTi0xM1xuICAgIC8vIERC5YG044GvMTPmoYHjgafkv53mjIHjgZfjgabjgYTjgovliY3mj5DjgILjg4Hjgqfjg4Pjgq/jgYzkuI3kuIDoh7TjgafjgoLmg4XloLHmpJzntKLjga7jgZ/jgoHpgJrjgZlcbiAgICByZXR1cm4gdmFsaWRhdGVFQU4xMyhlYW4pID8gZWFuIDogZWFuO1xuICB9XG4gIGlmIChkaWdpdHMubGVuZ3RoID09PSAxMykge1xuICAgIC8vIOODgeOCp+ODg+OCr+ODh+OCo+OCuOODg+ODiOOBjOS4jeS4gOiHtOOBp+OCguOAgemBi+eUqOS4iuOCs+ODvOODieOBjOOBneOBruOBvuOBvuagvOe0jeOBleOCjOOBpuOBhOOCi+OCseODvOOCueOBq+WvvuW/nFxuICAgIHJldHVybiBkaWdpdHM7XG4gIH1cbiAgLy8g44Gd44KM5Lul5aSW77yIQ29kZTM5L0NvZGUxMjgvSVRGIOetie+8iTog6Iux5pWwL+iomOWPt+OCkuioseWuueOBl+OBpuOBneOBruOBvuOBvui/lOOBmVxuICAvLyDlrp/pgYvnlKjjgafjga/jgrnjgq3jg7zjg57jg7vllYblk4HjgrPjg7zjg4nku5Xmp5jjgavlkIjjgo/jgZvjgabliLbntITjgpLoqr/mlbTjgZfjgabjgY/jgaDjgZXjgYRcbiAgaWYgKC9eW0EtWmEtejAtOVxcLV8uXSskLy50ZXN0KHJhdykgJiYgcmF3Lmxlbmd0aCA+PSA0ICYmIHJhdy5sZW5ndGggPD0gNjQpIHtcbiAgICByZXR1cm4gcmF3LnRvVXBwZXJDYXNlKCk7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG4iXSwibmFtZXMiOlsiY2FsY0VBTjEzQ2hlY2tEaWdpdCIsImQxMiIsInRlc3QiLCJFcnJvciIsInN1bU9kZCIsInN1bUV2ZW4iLCJpIiwibiIsImNoYXJDb2RlQXQiLCJ0b3RhbCIsInZhbGlkYXRlRUFOMTMiLCJjb2RlIiwiY2hlY2siLCJzbGljZSIsIk51bWJlciIsIm5vcm1hbGl6ZUJhcmNvZGUiLCJpbnB1dCIsInJhdyIsInRyaW0iLCJub3JtYWxpemUiLCJkaWdpdHMiLCJyZXBsYWNlIiwibGVuZ3RoIiwiZWFuIiwidG9VcHBlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/barcode.ts\n"));

/***/ })

});